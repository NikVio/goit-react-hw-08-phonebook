{"version":3,"file":"static/js/854.1f77f922.chunk.js","mappings":"mOAOaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAkBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8GAQzBC,GAAQJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAmBM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,uPAW3BI,EAAYP,EAAAA,GAAAA,MAAYQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,+JAUxBM,GAAeT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAmBW,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,6CAKlCS,EAAUZ,EAAAA,GAAAA,OAAaa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,wS,GAcXH,EAAAA,GAAAA,IAAUc,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,yDAKRH,EAAAA,GAAAA,MAAYe,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,uP,sCC9CjCa,EAAkBC,EAAAA,KAAaC,MAAM,CACzCC,KAAMF,EAAAA,KAAaG,IAAI,EAAG,cAAcC,SAAS,YACjDC,MAAOL,EAAAA,KACJM,QACC,4CACA,yBAEDF,SAAS,cAGDG,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAajB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbV,KAAM,GACNG,MAAO,GACPQ,SAAU,IAEZC,iBAAkBf,EAClBgB,SAAU,SAACC,EAAQC,GACjBT,GAASU,EAAAA,EAAAA,IAASF,IAClBC,EAAQE,WACV,EAAEC,UAEFC,EAAAA,EAAAA,MAACvC,EAAI,CAAAsC,SAAA,EACHC,EAAAA,EAAAA,MAAC/B,EAAS,CAAA8B,SAAA,CAAC,SACJV,EAAAA,EAAAA,KAACvB,EAAK,CAACe,KAAK,UACjBQ,EAAAA,EAAAA,KAAClB,EAAY,CAACU,KAAK,OAAOoB,UAAU,aAGtCD,EAAAA,EAAAA,MAAC/B,EAAS,CAAA8B,SAAA,CAAC,UACHV,EAAAA,EAAAA,KAACvB,EAAK,CAACe,KAAK,WAClBQ,EAAAA,EAAAA,KAAClB,EAAY,CAACU,KAAK,QAAQoB,UAAU,aAGvCD,EAAAA,EAAAA,MAAC/B,EAAS,CAAA8B,SAAA,CAAC,aACAV,EAAAA,EAAAA,KAACvB,EAAK,CAACe,KAAK,cACrBQ,EAAAA,EAAAA,KAAClB,EAAY,CAACU,KAAK,WAAWoB,UAAU,aAG1CZ,EAAAA,EAAAA,KAACf,EAAO,CAAC4B,KAAK,SAAQH,SAAC,iBAI/B,E,UCpEe,SAASI,IACtB,OACEH,EAAAA,EAAAA,MAAA,OAAAD,SAAA,EACEV,EAAAA,EAAAA,KAACe,EAAAA,EAAM,CAAAL,UACLV,EAAAA,EAAAA,KAAA,SAAAU,SAAO,oBAETV,EAAAA,EAAAA,KAACH,EAAY,MAGnB,C","sources":["components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  Field as FormikField,\n  Form as FormikForm,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-width: 350px;\n  margin-top: 15px;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 10px;\n  line-height: 20px;\n  font-size: 14px;\n  color: rgb(40, 50, 80);\n  border-radius: 5px;\n  background: rgb(255, 255, 255);\n  border: 1px solid rgb(230, 240, 250);\n  box-shadow: 0 5px 4px rgba(110, 120, 130, 0.2);\n`;\n\nexport const FormGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  line-height: 28px;\n  font-size: 16px;\n  color: rgb(40, 52, 138);\n  font-weight: 500;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: red;\n  font-size: 14px;\n`;\n\nexport const FormBtn = styled.button`\n  margin: 30px 0 30px 0;\n  padding: 10px 30px;\n  font-size: 14px;\n  line-height: 30px;\n  background: rgb(40, 52, 138);\n  border: 1px solid rgb(40, 52, 138);\n  color: rgb(255, 255, 255);\n  text-decoration: none;\n  font-weight: 500;\n  border-radius: 5px;\n  text-align: center;\n`;\n\nexport const FilterBox = styled.div`\n  max-width: 400px;\n  margin: 20px 0 20px 0;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 10px;\n  line-height: 20px;\n  font-size: 14px;\n  color: rgb(40, 50, 80);\n  border-radius: 5px;\n  background: rgb(255, 255, 255);\n  border: 1px solid rgb(230, 240, 250);\n  box-shadow: 0 5px 4px rgba(110, 120, 130, 0.2);\n`;\n","import { Formik } from 'formik';\n\nimport {\n  Form,\n  Field,\n  FormGroup,\n  ErrorMessage,\n  FormBtn,\n} from './RegisterForm.styled';\n\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'components/Redux/auth/operations';\n\nconst PhoneBookSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'Too Short!').required('Required'),\n  email: Yup.string()\n    .matches(\n      /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n      'Invalid email address'\n    )\n    .required('Required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  //   const handleCheckContact = values => {\n  //     const checkContact = contacts.some(\n  //       contact => contact.name.toLowerCase() === values.name.toLowerCase()\n  //     );\n  //     if (checkContact) {\n  //       alert(`${values.name} is already in contacts`);\n  //       return;\n  //     }\n  //     dispatch(addContacts(values));\n  //   };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={PhoneBookSchema}\n      onSubmit={(values, actions) => {\n        dispatch(register(values));\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <FormGroup>\n          Name <Field name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </FormGroup>\n\n        <FormGroup>\n          Email <Field name=\"email\" />\n          <ErrorMessage name=\"email\" component=\"span\" />\n        </FormGroup>\n\n        <FormGroup>\n          Password <Field name=\"password\" />\n          <ErrorMessage name=\"password\" component=\"span\" />\n        </FormGroup>\n\n        <FormBtn type=\"submit\">Register</FormBtn>\n      </Form>\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { Helmet } from 'react-helmet';\n\nexport default function Register() {\n  return (\n    <div>\n      <Helmet>\n        <title>Registration</title>\n      </Helmet>\n      <RegisterForm />\n    </div>\n  );\n}\n"],"names":["Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","Field","FormikField","_templateObject2","FormGroup","_templateObject3","ErrorMessage","FormikError","_templateObject4","FormBtn","_templateObject5","_templateObject6","_templateObject7","PhoneBookSchema","Yup","shape","name","min","required","email","matches","RegisterForm","dispatch","useDispatch","_jsx","Formik","initialValues","password","validationSchema","onSubmit","values","actions","register","resetForm","children","_jsxs","component","type","Register","Helmet"],"sourceRoot":""}