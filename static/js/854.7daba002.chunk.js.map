{"version":3,"file":"static/js/854.7daba002.chunk.js","mappings":"yNAEaA,EAAYC,EAAAA,GAAAA,IAAUC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iCAItBC,EAAoBH,EAAAA,GAAAA,IAAUI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,wH,mHCC9BG,GAAOL,EAAAA,EAAAA,IAAOM,EAAAA,GAAPN,CAAkBC,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8GAQzBK,GAAQP,EAAAA,EAAAA,IAAOQ,EAAAA,GAAPR,CAAmBI,IAAAA,GAAAF,EAAAA,EAAAA,GAAA,uPAW3BO,EAAYT,EAAAA,GAAAA,MAAYU,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,+JAUxBS,GAAeX,EAAAA,EAAAA,IAAOY,EAAAA,GAAPZ,CAAmBa,IAAAA,GAAAX,EAAAA,EAAAA,GAAA,6CAKlCY,EAAUd,EAAAA,GAAAA,OAAae,IAAAA,GAAAb,EAAAA,EAAAA,GAAA,wS,GAcXF,EAAAA,GAAAA,IAAUgB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,yDAKRF,EAAAA,GAAAA,MAAYiB,IAAAA,GAAAf,EAAAA,EAAAA,GAAA,uP,sCC9CjCgB,EAAkBC,EAAAA,KAAaC,MAAM,CACzCC,KAAMF,EAAAA,KAAaG,IAAI,EAAG,cAAcC,SAAS,YACjDC,MAAOL,EAAAA,KACJM,QACC,4CACA,yBAEDF,SAAS,YACZG,SAAUP,EAAAA,KAAaG,IAAI,EAAG,aAAaC,SAAS,cAGzCI,EAAe,WAC1B,IAAMC,GAAWC,EAAAA,EAAAA,MAEjB,OACEC,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbX,KAAM,GACNG,MAAO,GACPE,SAAU,IAEZO,iBAAkBf,EAClBgB,SAAU,SAACC,EAAQC,GACjBR,GAASS,EAAAA,EAAAA,IAASF,IAClBC,EAAQE,WACV,EAAEC,UAEFC,EAAAA,EAAAA,MAACnC,EAAI,CAAAkC,SAAA,EACHC,EAAAA,EAAAA,MAAC/B,EAAS,CAAA8B,SAAA,CAAC,aACAT,EAAAA,EAAAA,KAACvB,EAAK,CAACc,KAAK,OAAOoB,KAAK,OAAOC,QAAQ,aAChDZ,EAAAA,EAAAA,KAACnB,EAAY,CAACU,KAAK,OAAOsB,UAAU,aAGtCH,EAAAA,EAAAA,MAAC/B,EAAS,CAAA8B,SAAA,CAAC,UACHT,EAAAA,EAAAA,KAACvB,EAAK,CAACc,KAAK,QAAQoB,KAAK,QAAQC,QAAQ,aAC/CZ,EAAAA,EAAAA,KAACnB,EAAY,CAACU,KAAK,QAAQsB,UAAU,aAGvCH,EAAAA,EAAAA,MAAC/B,EAAS,CAAA8B,SAAA,CAAC,aACAT,EAAAA,EAAAA,KAACvB,EAAK,CAACc,KAAK,WAAWoB,KAAK,WAAWC,QAAQ,aACxDZ,EAAAA,EAAAA,KAACnB,EAAY,CAACU,KAAK,WAAWsB,UAAU,aAG1Cb,EAAAA,EAAAA,KAAChB,EAAO,CAAC2B,KAAK,SAAQF,SAAC,iBAI/B,E,UC1De,SAASK,IACtB,OACEd,EAAAA,EAAAA,KAAC/B,EAAAA,EAAS,CAAAwC,UACRT,EAAAA,EAAAA,KAAC3B,EAAAA,EAAiB,CAAAoC,UAChBT,EAAAA,EAAAA,KAACH,EAAY,OAIrB,C","sources":["pages/Contacts.styled.js","components/RegisterForm/RegisterForm.styled.js","components/RegisterForm/RegisterForm.js","pages/Register.js"],"sourcesContent":["import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n`;\n\nexport const ContactsContainer = styled.div`\n  max-width: 400px;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  margin: auto;\n`;\n","import styled from 'styled-components';\nimport {\n  Field as FormikField,\n  Form as FormikForm,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-width: 350px;\n  margin-top: 15px;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 10px;\n  line-height: 20px;\n  font-size: 14px;\n  color: rgb(40, 50, 80);\n  border-radius: 5px;\n  background: rgb(255, 255, 255);\n  border: 1px solid rgb(230, 240, 250);\n  box-shadow: 0 5px 4px rgba(110, 120, 130, 0.2);\n`;\n\nexport const FormGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  line-height: 28px;\n  font-size: 16px;\n  color: rgb(40, 52, 138);\n  font-weight: 500;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: red;\n  font-size: 14px;\n`;\n\nexport const FormBtn = styled.button`\n  margin: 30px 0 30px 0;\n  padding: 10px 30px;\n  font-size: 14px;\n  line-height: 30px;\n  background: rgb(40, 52, 138);\n  border: 1px solid rgb(40, 52, 138);\n  color: rgb(255, 255, 255);\n  text-decoration: none;\n  font-weight: 500;\n  border-radius: 5px;\n  text-align: center;\n`;\n\nexport const FilterBox = styled.div`\n  max-width: 400px;\n  margin: 20px 0 20px 0;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 10px;\n  line-height: 20px;\n  font-size: 14px;\n  color: rgb(40, 50, 80);\n  border-radius: 5px;\n  background: rgb(255, 255, 255);\n  border: 1px solid rgb(230, 240, 250);\n  box-shadow: 0 5px 4px rgba(110, 120, 130, 0.2);\n`;\n","import { Formik } from 'formik';\n\nimport {\n  Form,\n  Field,\n  FormGroup,\n  ErrorMessage,\n  FormBtn,\n} from './RegisterForm.styled';\n\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux';\nimport { register } from 'components/Redux/auth/operations';\n\nconst PhoneBookSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'Too Short!').required('Required'),\n  email: Yup.string()\n    .matches(\n      /^[A-Z0-9._%+-]+@[A-Z0-9.-]+\\.[A-Z]{2,4}$/i,\n      'Invalid email address'\n    )\n    .required('Required'),\n  password: Yup.string().min(7, 'Too short').required('Required'),\n});\n\nexport const RegisterForm = () => {\n  const dispatch = useDispatch();\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        email: '',\n        password: '',\n      }}\n      validationSchema={PhoneBookSchema}\n      onSubmit={(values, actions) => {\n        dispatch(register(values));\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <FormGroup>\n          Username <Field name=\"name\" type=\"name\" variant=\"outline\" />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </FormGroup>\n\n        <FormGroup>\n          Email <Field name=\"email\" type=\"email\" variant=\"outline\" />\n          <ErrorMessage name=\"email\" component=\"span\" />\n        </FormGroup>\n\n        <FormGroup>\n          Password <Field name=\"password\" type=\"password\" variant=\"outline\" />\n          <ErrorMessage name=\"password\" component=\"span\" />\n        </FormGroup>\n\n        <FormBtn type=\"submit\">Register</FormBtn>\n      </Form>\n    </Formik>\n  );\n};\n","import { RegisterForm } from 'components/RegisterForm/RegisterForm';\nimport { ContactsContainer, Container } from './Contacts.styled';\n\nexport default function Register() {\n  return (\n    <Container>\n      <ContactsContainer>\n        <RegisterForm />\n      </ContactsContainer>\n    </Container>\n  );\n}\n"],"names":["Container","styled","_templateObject","_taggedTemplateLiteral","ContactsContainer","_templateObject2","Form","FormikForm","Field","FormikField","FormGroup","_templateObject3","ErrorMessage","FormikError","_templateObject4","FormBtn","_templateObject5","_templateObject6","_templateObject7","PhoneBookSchema","Yup","shape","name","min","required","email","matches","password","RegisterForm","dispatch","useDispatch","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","register","resetForm","children","_jsxs","type","variant","component","Register"],"sourceRoot":""}