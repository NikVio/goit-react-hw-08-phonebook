{"version":3,"file":"static/js/54.3cfb49dc.chunk.js","mappings":"0OAOaA,GAAOC,EAAAA,EAAAA,IAAOC,EAAAA,GAAPD,CAAkBE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,8GAQzBC,GAAQJ,EAAAA,EAAAA,IAAOK,EAAAA,GAAPL,CAAmBM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,uPAW3BI,EAAYP,EAAAA,GAAAA,MAAYQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,+JAUxBM,GAAeT,EAAAA,EAAAA,IAAOU,EAAAA,GAAPV,CAAmBW,IAAAA,GAAAR,EAAAA,EAAAA,GAAA,6CAKlCS,EAAUZ,EAAAA,GAAAA,OAAaa,IAAAA,GAAAV,EAAAA,EAAAA,GAAA,wSAcvBW,EAAYd,EAAAA,GAAAA,IAAUe,IAAAA,GAAAZ,EAAAA,EAAAA,GAAA,yDAKtBa,EAAchB,EAAAA,GAAAA,MAAYiB,IAAAA,GAAAd,EAAAA,EAAAA,GAAA,uP,wCC1D1Be,EAAgB,SAAAC,GAAK,OAAIA,EAAMC,OAAQ,EAEvCC,EAAsB,SAAAF,GAAK,OAAIA,EAAMG,SAASC,KAAM,EAEpDC,EAAkB,SAAAL,GAAK,OAAIA,EAAMG,SAASG,SAAU,EAEpDC,EAAc,SAAAP,GAAK,OAAIA,EAAMG,SAASK,KAAM,EAE5CC,GAAwBC,EAAAA,EAAAA,IACnC,CAACR,EAAqBH,IACtB,SAACI,EAAUF,GACT,OAAOE,EAASQ,QAAO,SAAAC,GAAO,OAC5BA,EAAQC,KAAKC,cAAcC,SAASd,EAAQa,cAAcE,OAAO,GAErE,I,SCCIC,EAAkBC,EAAAA,KAAaC,MAAM,CACzCN,KAAMK,EAAAA,KAAaE,IAAI,EAAG,cAAcC,SAAS,YACjDC,OAAQJ,EAAAA,KACLK,QACC,gDACA,mDAEDF,SAAS,cAGDG,EAAc,WACzB,IAAMC,GAAWC,EAAAA,EAAAA,MACXvB,GAAWwB,EAAAA,EAAAA,IAAYzB,GAa7B,OACE0B,EAAAA,EAAAA,KAACC,EAAAA,GAAM,CACLC,cAAe,CACbjB,KAAM,GACNS,OAAQ,IAEVS,iBAAkBd,EAClBe,SAAU,SAACC,EAAQC,IAlBI,SAAAD,GACJ9B,EAASgC,MAC5B,SAAAvB,GAAO,OAAIA,EAAQC,KAAKC,gBAAkBmB,EAAOpB,KAAKC,aAAa,IAGnEsB,MAAM,GAADC,OAAIJ,EAAOpB,KAAI,4BAGtBY,GAASa,EAAAA,EAAAA,IAAYL,GACvB,CAUMM,CAAmBN,GACnBC,EAAQM,WACV,EAAEC,UAEFC,EAAAA,EAAAA,MAAC9D,EAAI,CAAA6D,SAAA,EACHC,EAAAA,EAAAA,MAACtD,EAAS,CAAAqD,SAAA,CAAC,SACJb,EAAAA,EAAAA,KAAC3C,EAAK,CAAC4B,KAAK,UACjBe,EAAAA,EAAAA,KAACtC,EAAY,CAACuB,KAAK,OAAO8B,UAAU,aAGtCD,EAAAA,EAAAA,MAACtD,EAAS,CAAAqD,SAAA,CAAC,WACFb,EAAAA,EAAAA,KAAC3C,EAAK,CAAC4B,KAAK,YACnBe,EAAAA,EAAAA,KAACtC,EAAY,CAACuB,KAAK,SAAS8B,UAAU,aAGxCf,EAAAA,EAAAA,KAACnC,EAAO,CAACmD,KAAK,SAAQH,SAAC,oBAI/B,ECnEaI,EAAchE,EAAAA,GAAAA,EAAQE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,mDAKtB8D,EAAYjE,EAAAA,GAAAA,OAAaM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,6NAazB+D,EAAiBlE,EAAAA,GAAAA,IAAUQ,IAAAA,GAAAL,EAAAA,EAAAA,GAAA,+DCf3BgE,EAAW,SAAHC,GAAsC,IAADC,EAAAD,EAA/BE,GAAMtC,EAAIqC,EAAJrC,KAAMS,EAAM4B,EAAN5B,OAAQ8B,EAAEF,EAAFE,GACvC3B,GAAWC,EAAAA,EAAAA,MAIjB,OACEgB,EAAAA,EAAAA,MAACK,EAAc,CAAAN,SAAA,EACbC,EAAAA,EAAAA,MAACG,EAAW,CAAAJ,SAAA,CACT5B,EAAK,MAAEe,EAAAA,EAAAA,KAAA,QAAAa,SAAOnB,QAEjBM,EAAAA,EAAAA,KAACkB,EAAS,CAACO,QAPM,WAAH,OAAS5B,GAAS6B,EAAAA,EAAAA,IAAgBF,GAAK,EAOnBR,KAAK,SAAQH,SAAC,aAKtD,EClBac,EAAa1E,EAAAA,GAAAA,GAASE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,0FCGtBwE,EAAc,WACzB,IAAMC,GAAU9B,EAAAA,EAAAA,IAAYlB,GAE5B,OACEmB,EAAAA,EAAAA,KAAC2B,EAAU,CAAAd,SACRgB,EAAQC,KAAI,SAAAC,GAAI,OACf/B,EAAAA,EAAAA,KAAA,MAAAa,UACEb,EAAAA,EAAAA,KAACoB,EAAQ,CAACG,GAAIQ,KADPA,EAAKP,GAET,KAIb,E,UCPaQ,EAAS,WACpB,IAAMnC,GAAWC,EAAAA,EAAAA,MACXf,GAASgB,EAAAA,EAAAA,IAAY5B,GAE3B,OACE6B,EAAAA,EAAAA,KAACjC,EAAS,CAAA8C,UACRC,EAAAA,EAAAA,MAACtD,EAAS,CAAAqD,SAAA,CAAC,wBACa,KACtBb,EAAAA,EAAAA,KAAC/B,EAAW,CACV+C,KAAK,OACLiB,MAAOlD,EACPmD,SAAU,SAAAC,GAAG,OAAItC,GAASuC,EAAAA,EAAAA,IAAcD,EAAIE,OAAOJ,OAAO,QAKpE,E,8BCVe,SAASb,IACtB,IAAMvB,GAAWC,EAAAA,EAAAA,MACXvB,GAAWwB,EAAAA,EAAAA,IAAYzB,GACvBI,GAAYqB,EAAAA,EAAAA,IAAYtB,GACxBG,GAAQmB,EAAAA,EAAAA,IAAYpB,GAK1B,OAHA2D,EAAAA,EAAAA,YAAU,WACRzC,GAAS0C,EAAAA,EAAAA,MACX,GAAG,CAAC1C,KAEFG,EAAAA,EAAAA,KAACwC,EAAAA,EAAS,CAAA3B,UACRC,EAAAA,EAAAA,MAAC2B,EAAAA,EAAiB,CAAA5B,SAAA,EAChBb,EAAAA,EAAAA,KAAA,MAAAa,SAAI,mBACJb,EAAAA,EAAAA,KAACJ,EAAW,KACZI,EAAAA,EAAAA,KAACgC,EAAM,IACNtD,IAAcE,IACboB,EAAAA,EAAAA,KAAC0C,EAAAA,GAAO,CACNb,SAAS,EACTc,OAAO,KACPC,MAAM,KACNC,UAAU,kBACVC,aAAc,CAAC,EACfC,aAAa,kBACbC,MAAM,OACNC,gBAAgB,YAInB1E,EAAS2E,OAAS,IAAKlD,EAAAA,EAAAA,KAAC4B,EAAW,IAEnChD,IAASoB,EAAAA,EAAAA,KAAA,KAAAa,SAAIjC,QAItB,C,yGChDa4D,EAAYvF,EAAAA,GAAAA,IAAUE,IAAAA,GAAAC,EAAAA,EAAAA,GAAA,iCAItBqF,EAAoBxF,EAAAA,GAAAA,IAAUM,IAAAA,GAAAH,EAAAA,EAAAA,GAAA,wH","sources":["components/ContactForm/ContactForm.styled.js","components/Redux/selectors.js","components/ContactForm/ContactForm.js","components/ContactList/Contacts.styled.js","components/ContactList/Contacts.js","components/ContactList/ContactList.styled.js","components/ContactList/ContactList.js","components/Filter/Filter.js","pages/Contacts.js","pages/Contacts.styled.js"],"sourcesContent":["import styled from 'styled-components';\nimport {\n  Field as FormikField,\n  Form as FormikForm,\n  ErrorMessage as FormikError,\n} from 'formik';\n\nexport const Form = styled(FormikForm)`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  max-width: 350px;\n  margin-top: 15px;\n`;\n\nexport const Field = styled(FormikField)`\n  padding: 10px;\n  line-height: 20px;\n  font-size: 14px;\n  color: rgb(40, 50, 80);\n  border-radius: 5px;\n  background: rgb(255, 255, 255);\n  border: 1px solid rgb(230, 240, 250);\n  box-shadow: 0 5px 4px rgba(110, 120, 130, 0.2);\n`;\n\nexport const FormGroup = styled.label`\n  display: flex;\n  flex-direction: column;\n  gap: 8px;\n  line-height: 28px;\n  font-size: 16px;\n  color: rgb(40, 52, 138);\n  font-weight: 500;\n`;\n\nexport const ErrorMessage = styled(FormikError)`\n  color: red;\n  font-size: 14px;\n`;\n\nexport const FormBtn = styled.button`\n  margin: 30px 0 30px 0;\n  padding: 10px 30px;\n  font-size: 14px;\n  line-height: 30px;\n  background: rgb(40, 52, 138);\n  border: 1px solid rgb(40, 52, 138);\n  color: rgb(255, 255, 255);\n  text-decoration: none;\n  font-weight: 500;\n  border-radius: 5px;\n  text-align: center;\n`;\n\nexport const FilterBox = styled.div`\n  max-width: 400px;\n  margin: 20px 0 20px 0;\n`;\n\nexport const FilterInput = styled.input`\n  padding: 10px;\n  line-height: 20px;\n  font-size: 14px;\n  color: rgb(40, 50, 80);\n  border-radius: 5px;\n  background: rgb(255, 255, 255);\n  border: 1px solid rgb(230, 240, 250);\n  box-shadow: 0 5px 4px rgba(110, 120, 130, 0.2);\n`;\n","import { createSelector } from '@reduxjs/toolkit';\n\nexport const selectFilters = state => state.filters;\n\nexport const selectContactsValue = state => state.contacts.items;\n\nexport const selectIsLoading = state => state.contacts.isLoading;\n\nexport const selectError = state => state.contacts.error;\n\nexport const selectVisibleContacts = createSelector(\n  [selectContactsValue, selectFilters],\n  (contacts, filters) => {\n    return contacts.filter(contact =>\n      contact.name.toLowerCase().includes(filters.toLowerCase().trim())\n    );\n  }\n);\n","import { Formik } from 'formik';\n\nimport {\n  Form,\n  Field,\n  FormGroup,\n  ErrorMessage,\n  FormBtn,\n} from './ContactForm.styled';\n\nimport * as Yup from 'yup';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nimport { addContacts } from 'components/Redux/contacts/operations';\nimport { selectContactsValue } from 'components/Redux/selectors';\n\nconst PhoneBookSchema = Yup.object().shape({\n  name: Yup.string().min(3, 'Too Short!').required('Required'),\n  number: Yup.string()\n    .matches(\n      /^(\\d{2,}-\\d{2,}-\\d{2,}|\\d{2,}-\\d{2,}|\\d{5,})$/,\n      'It must be min 5 numbers (1234567 or 123-45-67)'\n    )\n    .required('Required'),\n});\n\nexport const ContactForm = () => {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsValue);\n\n  const handleCheckContact = values => {\n    const checkContact = contacts.some(\n      contact => contact.name.toLowerCase() === values.name.toLowerCase()\n    );\n    if (checkContact) {\n      alert(`${values.name} is already in contacts`);\n      return;\n    }\n    dispatch(addContacts(values));\n  };\n\n  return (\n    <Formik\n      initialValues={{\n        name: '',\n        number: '',\n      }}\n      validationSchema={PhoneBookSchema}\n      onSubmit={(values, actions) => {\n        handleCheckContact(values);\n        actions.resetForm();\n      }}\n    >\n      <Form>\n        <FormGroup>\n          Name <Field name=\"name\" />\n          <ErrorMessage name=\"name\" component=\"span\" />\n        </FormGroup>\n\n        <FormGroup>\n          Number <Field name=\"number\" />\n          <ErrorMessage name=\"number\" component=\"span\" />\n        </FormGroup>\n\n        <FormBtn type=\"submit\">Add contact</FormBtn>\n      </Form>\n    </Formik>\n  );\n};\n","import styled from 'styled-components';\n\nexport const NameContact = styled.p`\n  font-size: 20px;\n  font-weight: 500;\n`;\n\nexport const DeleteBtn = styled.button`\n  font-size: 14px;\n  height: 32px;\n  line-height: 32px;\n  min-width: 150px;\n  padding: 0 10px;\n  text-transform: none;\n  color: #fff;\n  background-color: #2eb371;\n  border: none;\n  border-radius: 8px;\n`;\n\nexport const WrapperContact = styled.div`\n  display: flex;\n  justify-content: space-between;\n`;\n","import { NameContact, DeleteBtn, WrapperContact } from './Contacts.styled';\nimport { useDispatch } from 'react-redux';\n\nimport { deletedContacts } from 'components/Redux/contacts/operations';\n\nexport const Contacts = ({ el: { name, number, id } }) => {\n  const dispatch = useDispatch();\n\n  const handleDelete = () => dispatch(deletedContacts(id));\n\n  return (\n    <WrapperContact>\n      <NameContact>\n        {name}: <span>{number}</span>\n      </NameContact>\n      <DeleteBtn onClick={handleDelete} type=\"button\">\n        Delete\n      </DeleteBtn>\n    </WrapperContact>\n  );\n};\n","import styled from 'styled-components';\n\nexport const ContactBox = styled.ul`\n  display: flex;\n  max-width: 500px;\n  flex-direction: column;\n  gap: 15px;\n`;\n","import { Contacts } from './Contacts';\nimport { ContactBox } from './ContactList.styled';\nimport { useSelector } from 'react-redux';\nimport { selectVisibleContacts } from 'components/Redux/selectors';\n\nexport const ContactList = () => {\n  const visible = useSelector(selectVisibleContacts);\n\n  return (\n    <ContactBox>\n      {visible.map(item => (\n        <li key={item.id}>\n          <Contacts el={item} />\n        </li>\n      ))}\n    </ContactBox>\n  );\n};\n","import {\n  FormGroup,\n  FilterBox,\n  FilterInput,\n} from 'components/ContactForm/ContactForm.styled';\nimport { filterContact } from 'components/Redux/contacts/filtersSlice';\nimport { selectFilters } from 'components/Redux/selectors';\n\nimport { useDispatch, useSelector } from 'react-redux';\n\nexport const Filter = () => {\n  const dispatch = useDispatch();\n  const filter = useSelector(selectFilters);\n\n  return (\n    <FilterBox>\n      <FormGroup>\n        Find contacts by name{' '}\n        <FilterInput\n          type=\"text\"\n          value={filter}\n          onChange={evt => dispatch(filterContact(evt.target.value))}\n        />\n      </FormGroup>\n    </FilterBox>\n  );\n};\n","import { ContactForm } from 'components/ContactForm/ContactForm';\n\nimport { ContactList } from 'components/ContactList/ContactList';\nimport { Filter } from 'components/Filter/Filter';\nimport { fetchContacts } from 'components/Redux/contacts/operations';\nimport {\n  selectContactsValue,\n  selectError,\n  selectIsLoading,\n} from 'components/Redux/selectors';\n\nimport { useEffect } from 'react';\nimport { Comment } from 'react-loader-spinner';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ContactsContainer, Container } from './Contacts.styled';\n\nexport default function Contacts() {\n  const dispatch = useDispatch();\n  const contacts = useSelector(selectContactsValue);\n  const isLoading = useSelector(selectIsLoading);\n  const error = useSelector(selectError);\n\n  useEffect(() => {\n    dispatch(fetchContacts());\n  }, [dispatch]);\n  return (\n    <Container>\n      <ContactsContainer>\n        <h2>Your contacts</h2>\n        <ContactForm />\n        <Filter />\n        {isLoading && !error && (\n          <Comment\n            visible={true}\n            height=\"80\"\n            width=\"80\"\n            ariaLabel=\"comment-loading\"\n            wrapperStyle={{}}\n            wrapperClass=\"comment-wrapper\"\n            color=\"#fff\"\n            backgroundColor=\"#F4442E\"\n          />\n        )}\n\n        {contacts.length > 0 && <ContactList />}\n\n        {error && <p>{error}</p>}\n      </ContactsContainer>\n    </Container>\n  );\n}\n","import styled from 'styled-components';\n\nexport const Container = styled.div`\n  position: relative;\n`;\n\nexport const ContactsContainer = styled.div`\n  max-width: 400px;\n  position: absolute;\n  top: 0;\n  right: 0;\n  bottom: 0;\n  left: 0;\n  margin: auto;\n`;\n"],"names":["Form","styled","FormikForm","_templateObject","_taggedTemplateLiteral","Field","FormikField","_templateObject2","FormGroup","_templateObject3","ErrorMessage","FormikError","_templateObject4","FormBtn","_templateObject5","FilterBox","_templateObject6","FilterInput","_templateObject7","selectFilters","state","filters","selectContactsValue","contacts","items","selectIsLoading","isLoading","selectError","error","selectVisibleContacts","createSelector","filter","contact","name","toLowerCase","includes","trim","PhoneBookSchema","Yup","shape","min","required","number","matches","ContactForm","dispatch","useDispatch","useSelector","_jsx","Formik","initialValues","validationSchema","onSubmit","values","actions","some","alert","concat","addContacts","handleCheckContact","resetForm","children","_jsxs","component","type","NameContact","DeleteBtn","WrapperContact","Contacts","_ref","_ref$el","el","id","onClick","deletedContacts","ContactBox","ContactList","visible","map","item","Filter","value","onChange","evt","filterContact","target","useEffect","fetchContacts","Container","ContactsContainer","Comment","height","width","ariaLabel","wrapperStyle","wrapperClass","color","backgroundColor","length"],"sourceRoot":""}